@page "/visa-payment/{OrderId:int}"
@using KA.PaymentAPI.CyberSource
@using KA.Service.Orders
@using KA.ViewModels.Orders
@inherits OwningComponentBase

<form id="payment_confirmation" action="https://testsecureacceptance.cybersource.com/silent/pay" method="post">
    <input type="hidden" id="access_key" name="access_key" value="@paramsDictionary["access_key"]" />
    <input type="hidden" id="profile_id" name="profile_id" value="@paramsDictionary["profile_id"]" />
    <input type="hidden" id="transaction_uuid" name="transaction_uuid" value="@paramsDictionary["transaction_uuid"]" />
    <input type="hidden" id="signed_field_names" name="signed_field_names" value="@paramsDictionary["signed_field_names"]" />
    <input type="hidden" id="unsigned_field_names" name="unsigned_field_names" value="@paramsDictionary["unsigned_field_names"]" />
    <input type="hidden" id="signed_date_time" name="signed_date_time" value="@paramsDictionary["signed_date_time"]" />
    <input type="hidden" id="locale" name="locale" value="@paramsDictionary["locale"]" />
    <input type="hidden" name="transaction_type" size="25" value="@paramsDictionary["transaction_type"]">
    <input type="hidden" name="reference_number" size="25" value="@paramsDictionary["reference_number"]">
    <input type="hidden" name="amount" size="25" value="@paramsDictionary["amount"]"><br />
    <input type="hidden" name="currency" size="25" value="@paramsDictionary["currency"]" />
    <input type="hidden" name="signature" value="@signatureString" />
    <button type="submit" id="submit_payment_form" class="d-none" />
</form>

@code {
    [Parameter]
    public int OrderId { get; set; }
    private KA.DataProvider.Entities.Order order = new();
    private Dictionary<string, string> paramsDictionary = new();
    private string signatureString;
    private IOrderService _orderService;
    [Inject]
    private IJSRuntime jsr { get; set; }



    protected override void OnInitialized()
    {
        _orderService = ScopedServices.GetRequiredService<IOrderService>();
        order = _orderService.GetById(OrderId);
        paramsDictionary = new(){
            {"access_key","b010bf7cd6353537b32e0ccac2941780" },
            {"profile_id","ED5CB501-057A-42A0-BC3D-CF76C6FC0C43" },
            {"transaction_uuid",order.Id.ToString() },
            {"signed_field_names","access_key,profile_id,transaction_uuid,signed_field_names,unsigned_field_names,signed_date_time,locale,transaction_type,reference_number,amount,currency" },
            {"unsigned_field_names","" },
            {"signed_date_time",getUTCDateTime() },
            {"locale","vi" },
            {"transaction_type","authorization" },
            {"reference_number","123456789" },
            {"amount",order.TotalPrice.ToString() },
            {"currency","VND" }
        };
        signatureString = GetSignatureString();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await jsr.InvokeVoidAsync("import", "./Pages/Site/VisaPayment.razor.js");
        await jsr.InvokeVoidAsync("visaPaymentPageJs.submit");
    }

    public String getUTCDateTime()
    {
        DateTime time = DateTime.Now.ToUniversalTime();
        return time.ToString("yyyy-MM-dd'T'HH:mm:ss'Z'");
    }

    public string GetSignatureString()
    {
        var signatureParams = CyberSourceHelper.BuildDataToSign(paramsDictionary);
        var secretKey = "e0052047763642ea829ea103d0d1b0664f17035d528d46b1bbf4f01d1e519f5b85c7c8cc97204cdda912d6195d42951f1be15ffebc9d4feab754c5f42602c9bbe7f7702d118644ba99b9449d9e9618ae61998c90633344a6a81de2ece7b39a4d304bece9da8a4e1986a802c868f65450d601d0e2886044b1a40ff63dabf525e2";
        return CyberSourceHelper.sign(signatureParams, secretKey);
    }


}